on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  update:
    runs-on: namespace-profile-x64-linux
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/create-github-app-token@v2
        id: generate-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_KEY }}
      - uses: actions/checkout@v5
      - uses: fregante/setup-git-user@v2
      - uses: DeterminateSystems/determinate-nix-action@v3
        with:
          extra-conf: |
            accept-flake-config = true
            eval-cores = 0
            commit-lock-file-summary = chore(deps): update flake.lock
      - uses: namespacelabs/nscloud-cache-action@v1
        with:
          path: /nix/store
      - name: update flake
        run: nix flake update --commit-lock-file
      - name: update packages
        run: nix run '.#updater' -- --commit single
        env:
          # avoid rate limits
          GH_TOKEN: ${{ github.token }}
      - name: remove unstaged changes
        run: git restore .
      - run: nix store gc
      - uses: peter-evans/create-pull-request@v7
        id: pr
        with:
          token: ${{ steps.generate-token.outputs.token }}
          branch: update-deps
          delete-branch: true
          title: "chore(deps): auto-update"
          body: "Automated changes by the update workflow."
      - name: automerge
        run: gh pr merge --auto --rebase ${{ steps.pr.outputs.pull-request-number }}
        if: steps.pr.outputs.pull-request-number != ''
        env:
          # if using a personal access token, workflows are run twice
          # first in the pr and then after merging
          GH_TOKEN: ${{ github.token }}
